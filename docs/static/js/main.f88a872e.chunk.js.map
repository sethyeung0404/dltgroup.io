{"version":3,"sources":["reportWebVitals.ts","pages/home/components/Banner/assets/logo.png","pages/home/components/Banner/Logo.tsx","pages/home/components/Banner/Orbit.tsx","pages/home/components/Banner/index.tsx","pages/home/atoms/loginDrawerAtoms.ts","pages/home/components/LoginButton/index.tsx","pages/home/components/LoginDrawer/index.tsx","pages/home/index.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Logo","React","memo","alignItems","src","LogoImage","width","maxWidth","MotionCircle","motion","Circle","Orbit","radius","planetColor","initialPosition","useMemo","Math","random","position","height","bgColor","borderStyle","borderWidth","borderColor","animate","rotate","transition","ease","duration","repeat","Infinity","transformOrigin","initial","x","scale","opacity","Banner","amplitude","useBreakpointValue","base","md","justifyContent","flexDirection","overflow","backgroundColor","transform","bottom","fill","paused","options","speed","points","loginDrawerVisibleAtom","atom","toggleLoginDrawerAtom","get","set","closeLoginDrawerAtom","LoginButton","alwaysShow","useAtom","loginDrawerVisible","toggleLoginDrawer","onClick","aria-label","icon","as","FaUnlockAlt","color","size","right","top","zIndex","_hover","_active","borderTopRightRadius","borderBottomRightRadius","display","undefined","LoginDrawer","closeLoginDrawer","isOpen","placement","onClose","borderBottomWidth","spacing","mt","pointerEvents","children","FaUser","placeholder","FaLock","type","App","theme","extendTheme","config","initialColorMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f88a872e.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/logo.f3e5b575.png\";","import React from 'react';\nimport LogoImage from './assets/logo.png';\nimport { Stack, Image } from '@chakra-ui/react';\n\nexport const Logo = React.memo(() => {\n  return (\n    <Stack alignItems=\"center\">\n      <Image src={LogoImage} width=\"100%\" maxWidth={488} />\n    </Stack>\n  );\n});\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { Circle } from '@chakra-ui/react';\n\ninterface Props {\n  radius: number;\n  planetColor: string;\n}\n\nconst MotionCircle = motion(Circle);\n\nexport const Orbit = React.memo(({ radius, planetColor }: Props) => {\n  const initialPosition = React.useMemo(() => Math.random() * 360, []);\n\n  return (\n    <MotionCircle\n      position=\"absolute\"\n      width={radius}\n      height={radius}\n      bgColor=\"transparent\"\n      borderStyle=\"solid\"\n      borderWidth={2}\n      borderColor=\"gray.200\"\n      animate={{ rotate: initialPosition + 360 }}\n      transition={{\n        ease: 'linear',\n        duration: 20 + Math.random() * 30,\n        repeat: Infinity,\n      }}\n    >\n      <MotionCircle\n        bgColor={planetColor}\n        width={16}\n        height={16}\n        position=\"absolute\"\n        transformOrigin=\"center\"\n        initial={{\n          x: radius / 2,\n          scale: Math.random() * 0.5 + 0.5,\n        }}\n        animate={{\n          opacity: [0, 1, 0],\n        }}\n        transition={{\n          ease: 'linear',\n          duration: 10 + Math.random() * 5,\n          repeat: Infinity,\n        }}\n      />\n      <MotionCircle\n        bgColor={planetColor}\n        width={16}\n        height={16}\n        position=\"absolute\"\n        transformOrigin=\"center\"\n        initial={{\n          rotate: initialPosition,\n          x: -radius / 2,\n          scale: Math.random() * 0.5 + 0.5,\n        }}\n        animate={{\n          rotate: [initialPosition, initialPosition + 360],\n          opacity: [0, 1, 0],\n        }}\n        transition={{\n          ease: 'linear',\n          duration: 10 + Math.random() * 5,\n          repeat: Infinity,\n        }}\n      />\n    </MotionCircle>\n  );\n});\n","import React from 'react';\nimport { Flex, useBreakpointValue } from '@chakra-ui/react';\nimport { Logo } from './Logo';\nimport { Orbit } from './Orbit';\nimport Wave from 'react-wavify';\n\nexport const Banner = React.memo(() => {\n  const amplitude = useBreakpointValue({ base: 0.5, md: 1 });\n\n  return (\n    <Flex\n      position=\"relative\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      flexDirection=\"column\"\n      height={{ base: '100vh' }}\n      overflow=\"hidden\"\n      backgroundColor=\"white\"\n    >\n      <Flex\n        position=\"relative\"\n        transform={{ base: 'scale(0.5)', md: 'scale(1)' }}\n        transformOrigin=\"center\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Logo />\n        <Orbit planetColor=\"#e8bbd2\" radius={512 * 1} />\n        <Orbit planetColor=\"#849cb6\" radius={512 * 1.6} />\n        <Orbit planetColor=\"#92cbd6\" radius={512 * 2.4} />\n      </Flex>\n\n      <Flex position=\"absolute\" bottom={0} width=\"100%\">\n        <Wave\n          fill=\"#ffe7fa\"\n          paused={false}\n          options={{\n            height: 20,\n            amplitude: 60 * (amplitude || 1),\n            speed: 0.15,\n            points: 4 * (amplitude || 1),\n          }}\n        />\n      </Flex>\n      <Flex position=\"absolute\" bottom={0} width=\"100%\">\n        <Wave\n          fill=\"#e1eefe\"\n          paused={false}\n          options={{\n            height: 50,\n            amplitude: 40 * (amplitude || 1),\n            speed: 0.3,\n            points: 4 * (amplitude || 1),\n          }}\n        />\n      </Flex>\n    </Flex>\n  );\n});\n","import { atom } from 'jotai';\n\nexport const loginDrawerVisibleAtom = atom<boolean>(false);\n\nexport const toggleLoginDrawerAtom = atom(null, (get, set) =>\n  set(loginDrawerVisibleAtom, !get(loginDrawerVisibleAtom)),\n);\n\nexport const closeLoginDrawerAtom = atom(null, (get, set) =>\n  set(loginDrawerVisibleAtom, false),\n);\n","import React from 'react';\nimport { IconButton, Icon } from '@chakra-ui/react';\nimport { FaUnlockAlt } from 'react-icons/fa';\nimport { useAtom } from 'jotai';\nimport {\n  loginDrawerVisibleAtom,\n  toggleLoginDrawerAtom,\n} from '../../atoms/loginDrawerAtoms';\n\ninterface Props {\n  alwaysShow?: boolean;\n}\n\nexport const LoginButton = React.memo(({ alwaysShow }: Props) => {\n  const [loginDrawerVisible] = useAtom(loginDrawerVisibleAtom);\n  const [, toggleLoginDrawer] = useAtom(toggleLoginDrawerAtom);\n\n  return (\n    <IconButton\n      onClick={toggleLoginDrawer}\n      position=\"absolute\"\n      aria-label=\"login\"\n      icon={<Icon as={FaUnlockAlt} />}\n      bgColor=\"gray.700\"\n      color=\"white\"\n      size=\"lg\"\n      right={0}\n      top=\"20vh\"\n      zIndex={9999}\n      transition=\"all 300ms\"\n      _hover={{ bgColor: 'gray.500' }}\n      _active={{ bgColor: 'gray.500' }}\n      borderTopRightRadius={0}\n      borderBottomRightRadius={0}\n      display={alwaysShow || !loginDrawerVisible ? 'block' : 'none'}\n      transform={alwaysShow ? 'translateX(-320px)' : undefined}\n    />\n  );\n});\n","import React from 'react';\nimport {\n  Icon,\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n  Stack,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Button,\n  Link,\n} from '@chakra-ui/react';\nimport { useAtom } from 'jotai';\nimport {\n  closeLoginDrawerAtom,\n  loginDrawerVisibleAtom,\n} from '../../atoms/loginDrawerAtoms';\nimport { LoginButton } from '../LoginButton';\nimport { FaUser, FaLock } from 'react-icons/fa';\n\nexport const LoginDrawer = React.memo(() => {\n  const [loginDrawerVisible] = useAtom(loginDrawerVisibleAtom);\n  const [, closeLoginDrawer] = useAtom(closeLoginDrawerAtom);\n\n  return (\n    <Drawer\n      isOpen={loginDrawerVisible}\n      placement=\"right\"\n      onClose={closeLoginDrawer}\n    >\n      <DrawerOverlay />\n      <DrawerContent bgColor=\"gray.700\">\n        <LoginButton alwaysShow />\n\n        <DrawerHeader borderBottomWidth=\"1px\">User Login</DrawerHeader>\n\n        <DrawerBody>\n          <Stack spacing=\"24px\" mt={2}>\n            <InputGroup>\n              <InputLeftElement\n                pointerEvents=\"none\"\n                children={<Icon color=\"gray.300\" as={FaUser} />}\n              />\n              <Input placeholder=\"Username\" />\n            </InputGroup>\n\n            <InputGroup>\n              <InputLeftElement\n                pointerEvents=\"none\"\n                children={<Icon color=\"gray.300\" as={FaLock} />}\n              />\n              <Input type=\"password\" placeholder=\"Password\" />\n            </InputGroup>\n\n            <Link>Lost Password</Link>\n\n            <Button>Login</Button>\n          </Stack>\n        </DrawerBody>\n      </DrawerContent>\n    </Drawer>\n  );\n});\n","import React from 'react';\nimport { Flex } from '@chakra-ui/react';\nimport { Banner } from './components/Banner';\nimport { LoginButton } from './components/LoginButton';\nimport { LoginDrawer } from './components/LoginDrawer';\n\nexport const App = React.memo(() => {\n  return (\n    <Flex flexDirection=\"column\">\n      <Banner />\n      <LoginButton />\n      <LoginDrawer />\n    </Flex>\n  );\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { App } from './pages/home';\nimport './index.css';\nimport { ChakraProvider, extendTheme } from '@chakra-ui/react';\n\nconst theme = extendTheme({ config: { initialColorMode: 'dark' } });\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}